<!DOCTYPE html>
<html>

<head>
	<title>Sparkz Home</title>
	<script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
	<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
	<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css"
		integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Rubik+Glitch&display=swap" rel="stylesheet">
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Rubik+Glitch&family=Zen+Dots&display=swap" rel="stylesheet">
	<style type="text/css" media="screen">
		*,
		::after,
		::before {
			box-sizing: content-box !important;
		}

		body {
			line-height: inherit !important;
		}

		.app-header {
			background: white;
			align-items: center;
			width: 100%;
			justify-content: center;
			display: grid;
		}

		.btn {
			position: relative;
			height: 40px;
		}

		.table-header {
			position: sticky;
			top: 0px;
			background: white;
		}

		.overflow-hidden {
			height: 100px;
			overflow: auto
		}

		.searchableArea {
			display: flex;
			align-items: center;
			justify-content: center;
		}

		.lds-facebook {
			position: relative;
			width: 40px;
			height: 40px;
		}

		.lds-facebook .loader {
			display: inline-block;
			position: absolute;
			left: 4px;
			width: 8px;
			background: black;
			animation: lds-facebook 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;
		}

		.lds-facebook div:nth-child(1) {
			left: 4px;
			animation-delay: -0.24s;
		}

		.lds-facebook div:nth-child(2) {
			left: 16px;
			animation-delay: -0.12s;
		}

		.lds-facebook div:nth-child(3) {
			left: 28px;
			animation-delay: 0;
		}

		.no-jobs {
			display: grid;
			margin-top: 100px;
			align-items: center;
			justify-content: center;
			text-align: center;
		}

		.zen-font {
			font-family: 'Rubik Glitch', cursive;
			font-family: 'Zen Dots', cursive;
		}
		@keyframes lds-facebook {
			0% {
				top: 4px;
				height: 32px;
			}

			50%,
			100% {
				top: 12px;
				height: 16px;
			}
		}

		.my-container {
			color: #e5e5e5;
			font-size: 2.26rem;
			text-transform: uppercase;
			height: 100px;
			display: flex;
			align-items: center;
			justify-content: center;
		}

		.title {
			font-family: 'Rubik Glitch', cursive;
			color: grey;
		}

		.animation {
			height: 50px;
			overflow: hidden;
			margin-left: 1rem;
		}

		.animation>div>div {
			padding: 0.25rem 0.75rem;
			height: 2.81rem;
			margin-bottom: 2.81rem;
			display: inline-block;
		}

		.animation div:first-child {
			animation: text-animation 8s infinite;
		}

		.first div {
			background-color: #20a7d8;
		}

		.second div {
			background-color: #CD921E;
		}

		.third div {
			background-color: #c10528;
		}

		@keyframes text-animation {
			0% {
				margin-top: 0;
			}

			10% {
				margin-top: 0;
			}

			20% {
				margin-top: -5.62rem;
			}

			30% {
				margin-top: -5.62rem;
			}

			40% {
				margin-top: -11.24rem;
			}

			60% {
				margin-top: -11.24rem;
			}

			70% {
				margin-top: -5.62rem;
			}

			80% {
				margin-top: -5.62rem;
			}

			90% {
				margin-top: 0;
			}

			100% {
				margin-top: 0;
			}
		}
	</style>
</head>

<body>

	<div id="app"></div>

	<script type="text/babel">
		function Header() {
			const { useState } = React
			const [name, setName] = useState("Jhon Carter");
			const [isLoading, setIsLoading] = useState(false)
			const [search, setSearch] = useState('Sono Bello')
			const [dropdownValue, setdropdownValue] = useState();
			const [results, setResults] = useState([]);
			const [jobtitle, setJobtitle] = useState('Engineer')
			const [company, setCompany] = useState('Sono Bello');
			const [jobtype, setJobtype] = useState()
			const [location, setLocation] = useState('Texas')
			const [isApiCallMade, setisApiCallMade] = useState(false)

			async function startSearch() {
				let query = '';
				if (jobtitle)
					query = query + 'jobtitle=' + jobtitle + '&';
				if (company)
					query = query + 'company=' + company + '&';
				if (jobtype)
					query = query + 'jobtype=' + jobtype + '&';
				if (location)
					query = query + 'location=' + location + '&';

				if (query == '')
					alert('Please provide some information buddy')

				setIsLoading(true)

				fetch('/filter?' + query)
					.then((data) => data.json())
					.then((data) => {
						setResults(data.results.bindings)
						setisApiCallMade(true)
					}).finally(() => setIsLoading(false));
			}
			const dropdownChange = (e) => {
				setdropdownValue(e.target.value);
			};
			return (
				<>
					<div className="app-header mb-4">
						<div class="my-container">
							<span className="title">Hello ðŸ‘‹,  Start your Job search</span>
							<div class="animation">
								<div class="first"><div>Contract</div></div>
								<div class="second"><div>Software Engineer</div></div>
								<div class="third"><div>Sono Bello</div></div>
							</div>
						</div>
						<div className="searchableArea col-12 w-100">
							<input className="form-control col-3 mr-3" type="text" placeholder="Job Title" value={jobtitle} onChange={(val) => setJobtitle(val.target.value)} />
							<input className="form-control col-3" type="text" placeholder="Company" value={company} onChange={(val) => setCompany(val.target.value)} />
							<div className="col-3">
								<select className="form-control col-11" value={jobtype} onChange={(e) => { setJobtype(e.target.value) }}>
									<option value="">Any type</option>
									<option value="Full-time">Full Time</option>
									<option value="Part-time">Part Time</option>
									<option value="Contract">Contract</option>
									<option value="Weekend availability">Only Weekends</option>
									<option value="8 hour shift">8 hour shift</option>
									<option value="Monday to Friday">Only Weekdays</option>
								</select>
							</div>
							<input className="form-control col-3 mr-4" type="text" placeholder="Location" value={location} onChange={(val) => setLocation(val.target.value)} />

							{isLoading ? <div className="lds-facebook"><div className="loader"></div><div className="loader"></div><div className="loader"></div></div> : <button type="button" className="btn btn-success" onClick={() => { startSearch() }}>Search</button>}

						</div>
						<div>
							{results.length ? <div className="mt-3 text-center zen-font">{results.length} job(s) found ðŸ˜€</div> : ''}
						</div>
					</div>
					{results.length ?
						<div className="pl-5 pr-5">
							{results.length > 0 && <table className="table table-hover p-3">
								<thead className="table-header">
									<tr>
										<th scope="col">Company</th>
										<th scope="col">Job Title</th>
										<th scope="col">Job Description</th>
										<th scope="col">Job Type</th>
										<th scope="col">Location</th>
										<th scope="col">Application link</th>
									</tr>
								</thead>

								<tbody>
									{results.map((job) =>
										<tr>
											<td>
												<a href={job.Companyurl.value} target="_blank">
													{job.Company.value}
												</a>
											</td>
											<td>
												{job.jobTitle.value}
											</td>
											<td>
												<div className="overflow-hidden">
													{job.JD.value}
												</div>
											</td>
											<td>
												{job.jobtype.value}
											</td>
											<td>
												{job.location.value}
											</td>
											<td>
												<a href={job.jobapplylink.value} target="_blank">Apply</a>
											</td>
										</tr>
									)}
								</tbody>
							</table>
							}
						</div>
						: isApiCallMade? <div className="no-jobs">
							<img src="https://stickershop.line-scdn.net/stickershop/v1/product/14056790/LINEStorePC/main.png" />
							<h4 className="text-muted mt-4 zen-font">No jobs found</h4>
						</div> : ''}
				</>
			);
		}

		ReactDOM.createRoot(document.getElementById('app')).render(<Header />)

	</script>
</body>

</html>