<!DOCTYPE html>
<html>

<head>
	<title>Sparkz Home</title>
	<script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
	<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
	<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css"
		integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">

	<style type="text/css" media="screen">
		.app-header {
			background: white;
			align-items: center;
			width: 100%;
			justify-content: center;
			display: grid;
			position: sticky;
			top: 0;
		}

		.btn {
			position: relative;
			height: 40px;
		}

		.table-header {
			position: sticky;
			top: 150px;
			background: white;
		}

		.searchableArea {
			display: flex;
			align-items: center;
			justify-content: center;
		}

		.lds-facebook {
			position: relative;
			width: 40px;
			height: 40px;
		}

		.lds-facebook .loader {
			display: inline-block;
			position: absolute;
			left: 4px;
			width: 8px;
			background: black;
			animation: lds-facebook 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;
		}

		.lds-facebook div:nth-child(1) {
			left: 4px;
			animation-delay: -0.24s;
		}

		.lds-facebook div:nth-child(2) {
			left: 16px;
			animation-delay: -0.12s;
		}

		.lds-facebook div:nth-child(3) {
			left: 28px;
			animation-delay: 0;
		}

		@keyframes lds-facebook {
			0% {
				top: 4px;
				height: 32px;
			}

			50%,
			100% {
				top: 12px;
				height: 16px;
			}
		}
	</style>
</head>

<body>

	<div id="app"></div>

	<script type="text/babel">
		function Header() {
			const { useState } = React
			const [name, setName] = useState("Jhon Carter");
			const [isLoading, setIsLoading] = useState(false)
			const [search, setSearch] = useState('Sono Bello')
			const [dropdownValue, setdropdownValue] = useState('company');
			const [results, setResults] = useState([]);

			async function startSearch() {
				if (search == '')
					return;
				setIsLoading(true)
				fetch(`/filter?type=${dropdownValue}&payload=${search}`)
					.then((data) => data.json())
					.then((data) => {
						setResults(data.results.bindings)
					}).finally(() => setIsLoading(false));
			}
			const dropdownChange = (e) => {
				setdropdownValue(e.target.value);
			};
			return (
				<>
					<div className="app-header">
						<div className="header"><h1>Hello Buddy, Start your Job search here...</h1></div>
						<div className="searchableArea">
							<input className="form-control col-6" type="text" placeholder="Type something rey.." value={search} onChange={(val) => setSearch(val.target.value)} />
							<div className="col-4">
								<select className="form-control col-12" value={dropdownValue} onChange={dropdownChange}>
									<option value="job-title">Job Title</option>
									<option value="company">Company</option>
									<option value="location">Location</option>
									<option value="job-type">Job Type</option>
								</select>
							</div>
							{isLoading ? <div className="lds-facebook"><div className="loader"></div><div className="loader"></div><div className="loader"></div></div> : <button type="button" className="btn btn-success" onClick={() => { startSearch() }}>Search</button>}
						</div>
					</div>
					{results.length > 0 && <table className="table table-hover p-3">
						<thead className="table-header">
							<tr>
								<th scope="col">Company</th>
								<th scope="col">Job Title</th>
								<th scope="col">Job Description</th>
								<th scope="col">Job Type</th>
								<th scope="col">Location</th>
								<th scope="col">Application link</th>
							</tr>
						</thead>

						<tbody>
							{results.map((job) =>
								<tr>
									<td>
										<a href="{job.Companyurl.value}">
											{job.Company.value}
										</a>
									</td>
									<td>
										{job.jobTitle.value}
									</td>
									<td>
										<div>
											{job.JD.value}
										</div>
									</td>
									<td>
										{job.jobtype.value}
									</td>
									<td>
										{job.location.value}
									</td>
									<td>
										<a href="{job.jobapplylink.value}">Apply</a>
									</td>
								</tr>
							)}
						</tbody>
					</table>
					}
				</>
			);
		}

		ReactDOM.createRoot(document.getElementById('app')).render(<Header />)

	</script>
</body>

</html>